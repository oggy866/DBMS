CREATE TABLE Borrower (
    Roll_no INT PRIMARY KEY,
    Name VARCHAR(100),
    DateofIssue DATE,
    NameofBook VARCHAR(100),
    Status VARCHAR(10)
);

CREATE TABLE Fine (
    Roll_no INT,
    Date DATE,
    Amount DECIMAL(10,2),
    FOREIGN KEY (Roll_no) REFERENCES Borrower(Roll_no)
);

DELIMITER //

CREATE PROCEDURE calc_fine(
    IN p_roll_no INT,
    IN p_book_name VARCHAR(100)
)
BEGIN
    DECLARE v_days INT;
    DECLARE v_fine_amount DECIMAL(10,2);
    
    DECLARE exit handler for SQLEXCEPTION
    BEGIN
        SELECT 'Book not found' INTO @error_message;
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = @error_message;
    END;

    SELECT DATEDIFF(CURDATE(), DateofIssue) INTO v_days FROM Borrower WHERE Roll_no = p_roll_no AND NameofBook = p_book_name;

    IF v_days BETWEEN 15 AND 30 THEN
        SET v_fine_amount = v_days * 5;
    ELSEIF v_days > 30 THEN
        SET v_fine_amount = (v_days - 30) * 50 + 30 * 5;
    ELSE
        SET v_fine_amount = 0;
    END IF;

    INSERT INTO Fine VALUES (p_roll_no, CURDATE(), v_fine_amount);

    UPDATE Borrower SET Status = 'R' WHERE Roll_no = p_roll_no AND NameofBook = p_book_name;

END //

DELIMITER ;

INSERT INTO Borrower VALUES (1, 'John', '2023-01-01', 'Book1', 'I');
INSERT INTO Borrower VALUES (2, 'Smith', '2023-02-01', 'Book2', 'I');

CALL calc_fine(1, 'Book1');
CALL calc_fine(2, 'Book2');

SELECT * FROM Fine;
SELECT * FROM Borrower;
